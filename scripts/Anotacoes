//console.log(typeof(nomeVariavel)) //typeof para saber o tipo de uma variavel

Manipular Array
forEach() //Itera um array;
push() //Adiciona item no final do array;
unshift() Adiciona item no inicio do array;
pop() //Remove item no final do array;
shift() //Remove item no inicio do array;
indexOf() //Retorna o índice de um valor;
splice() //Remove ou substitui um itempelo índice;
slice() //Retorna uma parte de um array existente; 
promt() //Capturar entrada do usuário
Array.from(nomeList) //Transforma a list em array
reduce() //Executa uma função reducer (fornecida por você) para cada elemento do array, resultando num único valor de retorno.

Manipular Number
toFixed(2) //Retorna a quantidade de números após a casa decimal, no ex vai retornar duas


Design Patterns mais utilizados

-Factory
-Singleton
-Decorator
-Observer
-Module


<!--
<head>
    <script src="caminho/arquivo.js" defer</script> //O defer é usado para fazer com a página só carregue o arquivo .js depois de todo .html .css
</head>
-->


- Query Selector //Pegar dados do HTML usando classe e ids classe

//JSON - JavaScript Object Notation
const dog = {
 nome = 'Totó', 
 raca = 'vira lata',
 idade = 5		
}

const ConverterObjetoParaJson = JSON.stringify(dog) //Convertendo um Objeto em um JSON

const ConverterJsonParaObjeto = JSON.parseConverterObjetoParaJson   //Convertendo um JSON em um Objeto 


DOM - Documento Object Model - Padrão de como acessar e modificar os elementos HTML de uma página.

BOM - Browser Object Model - (O BOM está acima do DOM) Tudo o que está dentro de um objeto Window:
document
history
location
screen
navigator

document.createElement(passaElemento) -//Criar um novo elemento HTML

document.removeChild(passaElemento) - //Remove um elemento 

document.appendChild(passaElemento) - //Adiciona um elemento 

document.replaceChild(new, old) - //Substitui um elemento 


//Rest Operator

function sum(...args){
return args.reduce((acc, value) => acc + value, 0)
}


